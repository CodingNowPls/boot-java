<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>boot-java</artifactId>
        <groupId>com.boot</groupId>
        <version>3.8.5</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>boot-admin</artifactId>

    <dependencies>

        <!-- spring-boot-devtools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional> <!-- 表示依赖不会传递 -->
        </dependency>

        <!-- knife4j -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
        </dependency>

        <!-- Mysql驱动包 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>

        <!-- spring-boot-thymeleaf -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>


        <!-- 数据库访问 -->
        <dependency>
            <groupId>com.boot</groupId>
            <artifactId>boot-common-mybatis</artifactId>
        </dependency>

        <!-- 登录安全认证 -->
        <dependency>
            <groupId>com.boot</groupId>
            <artifactId>boot-common-security</artifactId>
        </dependency>

        <!-- web服务 -->
        <dependency>
            <groupId>com.boot</groupId>
            <artifactId>boot-common-web</artifactId>
        </dependency>

        <!-- 系统管理模块 -->
        <dependency>
            <groupId>com.boot</groupId>
            <artifactId>boot-system</artifactId>
        </dependency>

        <!-- 定时任务模块 -->
        <dependency>
            <groupId>com.boot</groupId>
            <artifactId>boot-quartz</artifactId>
        </dependency>

        <!-- 代码生成模块 -->
        <dependency>
            <groupId>com.boot</groupId>
            <artifactId>boot-generator</artifactId>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>com.boot</groupId>-->
<!--            <artifactId>boot-workflow</artifactId>-->
<!--        </dependency>-->


<!--        <dependency>-->
<!--            <groupId>com.boot</groupId>-->
<!--            <artifactId>boot-biz-demo</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>com.boot</groupId>-->
<!--            <artifactId>boot-biz-print</artifactId>-->
<!--            <version>${project.version}</version>-->
<!--        </dependency>-->


        <dependency>
            <groupId>com.boot.webjar</groupId>
            <artifactId>boot-ui</artifactId>
            <version>1.0.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}\..\lib\boot-ui-1.0.0.jar</systemPath>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <!-- 打thin瘦包-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${springboot.version}</version>
                <configuration>
                    <layout>ZIP</layout>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.boot.BootApplication</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!--打瘦包是将依赖的jar全部放到lib目录-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- 将依赖放到target/lib目录下 -->
                            <outputDirectory>target/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!--assembly 将lib目录，demo.jar, config，bin文件等组合成一个发布包-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <!--   这个是assembly 所在位置；${basedir}是指项目的的根路径  -->
                    <descriptors>
                        <descriptor>${basedir}/assembly.xml
                        </descriptor>
                    </descriptors>
                    <!--打包解压后的目录名；${project.artifactId}是指：项目的artifactId-->
                    <finalName>${project.artifactId}</finalName>
                    <!-- zip包文件名不加上assembly.xml中配置的id属性值 -->
                    <appendAssemblyId>false</appendAssemblyId>
                    <!-- 打包压缩包位置-->
                    <outputDirectory>${project.build.directory}/release</outputDirectory>
                    <!-- 打包编码 -->
                    <encoding>UTF-8</encoding>
                </configuration>
                <executions>
                    <execution><!-- 配置执行器 -->
                        <id>make-assembly</id>
                        <!-- 绑定到package生命周期阶段上 -->
                        <phase>package</phase>
                        <goals>
                            <!-- 只运行一次 -->
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <finalName>${project.artifactId}</finalName>

    </build>

</project>